Terminals unused in grammar

   IPTR
   LOOP
   NOT
   REF
   DEREF
   LT
   LE
   GT
   GE
   EQ
   NE
   OR
   PLUS
   MINUS
   AND
   STAR
   SLASH
   THENELSE
   LINKFOR
   FUNCTION_CALL
   ARRAY_ACCESS
   LINK


State 108 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 132 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 $@2: %empty

    3 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement $@2 '.'

    4 identifier_list: ID
    5                | identifier_list ',' ID

    6 declarations: declarations VAR identifier_list ':' type ';'
    7             | %empty

    8 type: standard_type
    9     | ARRAY '[' INUM DOTDOT INUM ']' OF standard_type

   10 standard_type: INTEGER
   11              | INTEGER_PTR
   12              | BOOLEAN
   13              | REAL

   14 subprogram_declarations: subprogram_declarations subprogram_declaration ';'
   15                        | %empty

   16 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement

   17 subprogram_head: scoped_name function_arguments ':' standard_type ';'
   18                | scoped_name procedure_arguments ';'

   19 scoped_name: FUNCTION ID
   20            | PROCEDURE ID

   21 function_arguments: '(' parameter_list ')'

   22 procedure_arguments: '(' parameter_list ')'
   23                    | %empty

   24 parameter_list: identifier_list ':' type
   25               | parameter_list ';' identifier_list ':' type
   26               | %empty

   27 compound_statement: BBEGIN optional_statements END

   28 optional_statements: statement_list
   29                    | %empty

   30 statement_list: statement
   31               | statement_list ';' statement

   32 statement: IF expression THEN statement
   33          | IF expression THEN statement ELSE statement ';'
   34          | variable ASSIGNOP expression
   35          | procedure_statement
   36          | compound_statement
   37          | WHILE expression DO statement_list
   38          | FOR variable ASSIGNOP expression TO expression DO statement_list

   39 variable: ID
   40         | ID '[' expression ']'

   41 procedure_statement: ID
   42                    | ID '(' expression_list ')'

   43 expression_list: expression
   44                | expression_list ',' expression

   45 expression: simple_expression
   46           | simple_expression RELOP simple_expression

   47 simple_expression: term
   48                  | simple_expression ADDOP term

   49 term: factor
   50     | term MULOP factor

   51 factor: DEREFOP reference
   52       | REFOP reference
   53       | NOTOP reference
   54       | reference

   55 reference: ID
   56          | ID '[' expression ']'
   57          | ID '(' expression_list ')'
   58          | INUM
   59          | RNUM
   60          | BOOL
   61          | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 21 22 42 57 61
')' (41) 3 21 22 42 57 61
',' (44) 5 44
'.' (46) 3
':' (58) 6 17 24 25
';' (59) 3 6 14 17 18 25 31 33
'[' (91) 9 40 56
']' (93) 9 40 56
error (256)
INUM (258) 9 58
BOOL (259) 60
RNUM (260) 59
IPTR (261)
ID (262) 3 4 5 19 20 39 40 41 42 55 56 57
ASSIGNOP (263) 34 38
RELOP (264) 46
ADDOP (265) 48
MULOP (266) 50
NOTOP (267) 53
REFOP (268) 52
DEREFOP (269) 51
LOOP (270)
NOT (271)
REF (272)
DEREF (273)
LT (274)
LE (275)
GT (276)
GE (277)
EQ (278)
NE (279)
OR (280)
PLUS (281)
MINUS (282)
AND (283)
STAR (284)
SLASH (285)
PROGRAM (286) 3
VAR (287) 6
ARRAY (288) 9
OF (289) 9
DOTDOT (290) 9
INTEGER (291) 10
INTEGER_PTR (292) 11
REAL (293) 13
BOOLEAN (294) 12
FUNCTION (295) 19
PROCEDURE (296) 20
BBEGIN (297) 27
END (298) 27
IF (299) 32 33
THEN (300) 32 33
ELSE (301) 33
THENELSE (302)
WHILE (303) 37
DO (304) 37 38
FOR (305) 38
TO (306) 38
LINKFOR (307)
FUNCTION_CALL (308)
ARRAY_ACCESS (309)
LINK (310)


Nonterminals, with rules where they appear

$accept (64)
    on left: 0
program (65)
    on left: 3, on right: 0
$@1 (66)
    on left: 1, on right: 3
$@2 (67)
    on left: 2, on right: 3
identifier_list (68)
    on left: 4 5, on right: 3 5 6 24 25
declarations (69)
    on left: 6 7, on right: 3 6 16
type (70)
    on left: 8 9, on right: 6 24 25
standard_type (71)
    on left: 10 11 12 13, on right: 8 9 17
subprogram_declarations (72)
    on left: 14 15, on right: 3 14 16
subprogram_declaration (73)
    on left: 16, on right: 14
subprogram_head (74)
    on left: 17 18, on right: 16
scoped_name (75)
    on left: 19 20, on right: 17 18
function_arguments (76)
    on left: 21, on right: 17
procedure_arguments (77)
    on left: 22 23, on right: 18
parameter_list (78)
    on left: 24 25 26, on right: 21 22 25
compound_statement (79)
    on left: 27, on right: 3 16 36
optional_statements (80)
    on left: 28 29, on right: 27
statement_list (81)
    on left: 30 31, on right: 28 31 37 38
statement (82)
    on left: 32 33 34 35 36 37 38, on right: 30 31 32 33
variable (83)
    on left: 39 40, on right: 34 38
procedure_statement (84)
    on left: 41 42, on right: 35
expression_list (85)
    on left: 43 44, on right: 42 44 57
expression (86)
    on left: 45 46, on right: 32 33 34 37 38 40 43 44 56 61
simple_expression (87)
    on left: 47 48, on right: 45 46 48
term (88)
    on left: 49 50, on right: 47 48 50
factor (89)
    on left: 51 52 53 54, on right: 49 50
reference (90)
    on left: 55 56 57 58 59 60 61, on right: 51 52 53 54


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    3 program: $@1 . PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement $@2 '.'

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    3 program: $@1 PROGRAM . ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement $@2 '.'

    ID  shift, and go to state 5


State 5

    3 program: $@1 PROGRAM ID . '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement $@2 '.'

    '('  shift, and go to state 6


State 6

    3 program: $@1 PROGRAM ID '(' . identifier_list ')' ';' declarations subprogram_declarations compound_statement $@2 '.'

    ID  shift, and go to state 7

    identifier_list  go to state 8


State 7

    4 identifier_list: ID .

    $default  reduce using rule 4 (identifier_list)


State 8

    3 program: $@1 PROGRAM ID '(' identifier_list . ')' ';' declarations subprogram_declarations compound_statement $@2 '.'
    5 identifier_list: identifier_list . ',' ID

    ')'  shift, and go to state 9
    ','  shift, and go to state 10


State 9

    3 program: $@1 PROGRAM ID '(' identifier_list ')' . ';' declarations subprogram_declarations compound_statement $@2 '.'

    ';'  shift, and go to state 11


State 10

    5 identifier_list: identifier_list ',' . ID

    ID  shift, and go to state 12


State 11

    3 program: $@1 PROGRAM ID '(' identifier_list ')' ';' . declarations subprogram_declarations compound_statement $@2 '.'

    $default  reduce using rule 7 (declarations)

    declarations  go to state 13


State 12

    5 identifier_list: identifier_list ',' ID .

    $default  reduce using rule 5 (identifier_list)


State 13

    3 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations . subprogram_declarations compound_statement $@2 '.'
    6 declarations: declarations . VAR identifier_list ':' type ';'

    VAR  shift, and go to state 14

    $default  reduce using rule 15 (subprogram_declarations)

    subprogram_declarations  go to state 15


State 14

    6 declarations: declarations VAR . identifier_list ':' type ';'

    ID  shift, and go to state 7

    identifier_list  go to state 16


State 15

    3 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations . compound_statement $@2 '.'
   14 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'

    FUNCTION   shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    BBEGIN     shift, and go to state 19

    subprogram_declaration  go to state 20
    subprogram_head         go to state 21
    scoped_name             go to state 22
    compound_statement      go to state 23


State 16

    5 identifier_list: identifier_list . ',' ID
    6 declarations: declarations VAR identifier_list . ':' type ';'

    ','  shift, and go to state 10
    ':'  shift, and go to state 24


State 17

   19 scoped_name: FUNCTION . ID

    ID  shift, and go to state 25


State 18

   20 scoped_name: PROCEDURE . ID

    ID  shift, and go to state 26


State 19

   27 compound_statement: BBEGIN . optional_statements END

    ID      shift, and go to state 27
    BBEGIN  shift, and go to state 19
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    FOR     shift, and go to state 30

    $default  reduce using rule 29 (optional_statements)

    compound_statement   go to state 31
    optional_statements  go to state 32
    statement_list       go to state 33
    statement            go to state 34
    variable             go to state 35
    procedure_statement  go to state 36


State 20

   14 subprogram_declarations: subprogram_declarations subprogram_declaration . ';'

    ';'  shift, and go to state 37


State 21

   16 subprogram_declaration: subprogram_head . declarations subprogram_declarations compound_statement

    $default  reduce using rule 7 (declarations)

    declarations  go to state 38


State 22

   17 subprogram_head: scoped_name . function_arguments ':' standard_type ';'
   18                | scoped_name . procedure_arguments ';'

    '('  shift, and go to state 39

    $default  reduce using rule 23 (procedure_arguments)

    function_arguments   go to state 40
    procedure_arguments  go to state 41


State 23

    3 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement . $@2 '.'

    $default  reduce using rule 2 ($@2)

    $@2  go to state 42


State 24

    6 declarations: declarations VAR identifier_list ':' . type ';'

    ARRAY        shift, and go to state 43
    INTEGER      shift, and go to state 44
    INTEGER_PTR  shift, and go to state 45
    REAL         shift, and go to state 46
    BOOLEAN      shift, and go to state 47

    type           go to state 48
    standard_type  go to state 49


State 25

   19 scoped_name: FUNCTION ID .

    $default  reduce using rule 19 (scoped_name)


State 26

   20 scoped_name: PROCEDURE ID .

    $default  reduce using rule 20 (scoped_name)


State 27

   39 variable: ID .
   40         | ID . '[' expression ']'
   41 procedure_statement: ID .
   42                    | ID . '(' expression_list ')'

    '('  shift, and go to state 50
    '['  shift, and go to state 51

    ASSIGNOP  reduce using rule 39 (variable)
    $default  reduce using rule 41 (procedure_statement)


State 28

   32 statement: IF . expression THEN statement
   33          | IF . expression THEN statement ELSE statement ';'

    INUM     shift, and go to state 52
    BOOL     shift, and go to state 53
    RNUM     shift, and go to state 54
    ID       shift, and go to state 55
    NOTOP    shift, and go to state 56
    REFOP    shift, and go to state 57
    DEREFOP  shift, and go to state 58
    '('      shift, and go to state 59

    expression         go to state 60
    simple_expression  go to state 61
    term               go to state 62
    factor             go to state 63
    reference          go to state 64


State 29

   37 statement: WHILE . expression DO statement_list

    INUM     shift, and go to state 52
    BOOL     shift, and go to state 53
    RNUM     shift, and go to state 54
    ID       shift, and go to state 55
    NOTOP    shift, and go to state 56
    REFOP    shift, and go to state 57
    DEREFOP  shift, and go to state 58
    '('      shift, and go to state 59

    expression         go to state 65
    simple_expression  go to state 61
    term               go to state 62
    factor             go to state 63
    reference          go to state 64


State 30

   38 statement: FOR . variable ASSIGNOP expression TO expression DO statement_list

    ID  shift, and go to state 66

    variable  go to state 67


State 31

   36 statement: compound_statement .

    $default  reduce using rule 36 (statement)


State 32

   27 compound_statement: BBEGIN optional_statements . END

    END  shift, and go to state 68


State 33

   28 optional_statements: statement_list .
   31 statement_list: statement_list . ';' statement

    ';'  shift, and go to state 69

    $default  reduce using rule 28 (optional_statements)


State 34

   30 statement_list: statement .

    $default  reduce using rule 30 (statement_list)


State 35

   34 statement: variable . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 70


State 36

   35 statement: procedure_statement .

    $default  reduce using rule 35 (statement)


State 37

   14 subprogram_declarations: subprogram_declarations subprogram_declaration ';' .

    $default  reduce using rule 14 (subprogram_declarations)


State 38

    6 declarations: declarations . VAR identifier_list ':' type ';'
   16 subprogram_declaration: subprogram_head declarations . subprogram_declarations compound_statement

    VAR  shift, and go to state 14

    $default  reduce using rule 15 (subprogram_declarations)

    subprogram_declarations  go to state 71


State 39

   21 function_arguments: '(' . parameter_list ')'
   22 procedure_arguments: '(' . parameter_list ')'

    ID  shift, and go to state 7

    $default  reduce using rule 26 (parameter_list)

    identifier_list  go to state 72
    parameter_list   go to state 73


State 40

   17 subprogram_head: scoped_name function_arguments . ':' standard_type ';'

    ':'  shift, and go to state 74


State 41

   18 subprogram_head: scoped_name procedure_arguments . ';'

    ';'  shift, and go to state 75


State 42

    3 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement $@2 . '.'

    '.'  shift, and go to state 76


State 43

    9 type: ARRAY . '[' INUM DOTDOT INUM ']' OF standard_type

    '['  shift, and go to state 77


State 44

   10 standard_type: INTEGER .

    $default  reduce using rule 10 (standard_type)


State 45

   11 standard_type: INTEGER_PTR .

    $default  reduce using rule 11 (standard_type)


State 46

   13 standard_type: REAL .

    $default  reduce using rule 13 (standard_type)


State 47

   12 standard_type: BOOLEAN .

    $default  reduce using rule 12 (standard_type)


State 48

    6 declarations: declarations VAR identifier_list ':' type . ';'

    ';'  shift, and go to state 78


State 49

    8 type: standard_type .

    $default  reduce using rule 8 (type)


State 50

   42 procedure_statement: ID '(' . expression_list ')'

    INUM     shift, and go to state 52
    BOOL     shift, and go to state 53
    RNUM     shift, and go to state 54
    ID       shift, and go to state 55
    NOTOP    shift, and go to state 56
    REFOP    shift, and go to state 57
    DEREFOP  shift, and go to state 58
    '('      shift, and go to state 59

    expression_list    go to state 79
    expression         go to state 80
    simple_expression  go to state 61
    term               go to state 62
    factor             go to state 63
    reference          go to state 64


State 51

   40 variable: ID '[' . expression ']'

    INUM     shift, and go to state 52
    BOOL     shift, and go to state 53
    RNUM     shift, and go to state 54
    ID       shift, and go to state 55
    NOTOP    shift, and go to state 56
    REFOP    shift, and go to state 57
    DEREFOP  shift, and go to state 58
    '('      shift, and go to state 59

    expression         go to state 81
    simple_expression  go to state 61
    term               go to state 62
    factor             go to state 63
    reference          go to state 64


State 52

   58 reference: INUM .

    $default  reduce using rule 58 (reference)


State 53

   60 reference: BOOL .

    $default  reduce using rule 60 (reference)


State 54

   59 reference: RNUM .

    $default  reduce using rule 59 (reference)


State 55

   55 reference: ID .
   56          | ID . '[' expression ']'
   57          | ID . '(' expression_list ')'

    '('  shift, and go to state 82
    '['  shift, and go to state 83

    $default  reduce using rule 55 (reference)


State 56

   53 factor: NOTOP . reference

    INUM  shift, and go to state 52
    BOOL  shift, and go to state 53
    RNUM  shift, and go to state 54
    ID    shift, and go to state 55
    '('   shift, and go to state 59

    reference  go to state 84


State 57

   52 factor: REFOP . reference

    INUM  shift, and go to state 52
    BOOL  shift, and go to state 53
    RNUM  shift, and go to state 54
    ID    shift, and go to state 55
    '('   shift, and go to state 59

    reference  go to state 85


State 58

   51 factor: DEREFOP . reference

    INUM  shift, and go to state 52
    BOOL  shift, and go to state 53
    RNUM  shift, and go to state 54
    ID    shift, and go to state 55
    '('   shift, and go to state 59

    reference  go to state 86


State 59

   61 reference: '(' . expression ')'

    INUM     shift, and go to state 52
    BOOL     shift, and go to state 53
    RNUM     shift, and go to state 54
    ID       shift, and go to state 55
    NOTOP    shift, and go to state 56
    REFOP    shift, and go to state 57
    DEREFOP  shift, and go to state 58
    '('      shift, and go to state 59

    expression         go to state 87
    simple_expression  go to state 61
    term               go to state 62
    factor             go to state 63
    reference          go to state 64


State 60

   32 statement: IF expression . THEN statement
   33          | IF expression . THEN statement ELSE statement ';'

    THEN  shift, and go to state 88


State 61

   45 expression: simple_expression .
   46           | simple_expression . RELOP simple_expression
   48 simple_expression: simple_expression . ADDOP term

    RELOP  shift, and go to state 89
    ADDOP  shift, and go to state 90

    $default  reduce using rule 45 (expression)


State 62

   47 simple_expression: term .
   50 term: term . MULOP factor

    MULOP  shift, and go to state 91

    $default  reduce using rule 47 (simple_expression)


State 63

   49 term: factor .

    $default  reduce using rule 49 (term)


State 64

   54 factor: reference .

    $default  reduce using rule 54 (factor)


State 65

   37 statement: WHILE expression . DO statement_list

    DO  shift, and go to state 92


State 66

   39 variable: ID .
   40         | ID . '[' expression ']'

    '['  shift, and go to state 51

    $default  reduce using rule 39 (variable)


State 67

   38 statement: FOR variable . ASSIGNOP expression TO expression DO statement_list

    ASSIGNOP  shift, and go to state 93


State 68

   27 compound_statement: BBEGIN optional_statements END .

    $default  reduce using rule 27 (compound_statement)


State 69

   31 statement_list: statement_list ';' . statement

    ID      shift, and go to state 27
    BBEGIN  shift, and go to state 19
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    FOR     shift, and go to state 30

    compound_statement   go to state 31
    statement            go to state 94
    variable             go to state 35
    procedure_statement  go to state 36


State 70

   34 statement: variable ASSIGNOP . expression

    INUM     shift, and go to state 52
    BOOL     shift, and go to state 53
    RNUM     shift, and go to state 54
    ID       shift, and go to state 55
    NOTOP    shift, and go to state 56
    REFOP    shift, and go to state 57
    DEREFOP  shift, and go to state 58
    '('      shift, and go to state 59

    expression         go to state 95
    simple_expression  go to state 61
    term               go to state 62
    factor             go to state 63
    reference          go to state 64


State 71

   14 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'
   16 subprogram_declaration: subprogram_head declarations subprogram_declarations . compound_statement

    FUNCTION   shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    BBEGIN     shift, and go to state 19

    subprogram_declaration  go to state 20
    subprogram_head         go to state 21
    scoped_name             go to state 22
    compound_statement      go to state 96


State 72

    5 identifier_list: identifier_list . ',' ID
   24 parameter_list: identifier_list . ':' type

    ','  shift, and go to state 10
    ':'  shift, and go to state 97


State 73

   21 function_arguments: '(' parameter_list . ')'
   22 procedure_arguments: '(' parameter_list . ')'
   25 parameter_list: parameter_list . ';' identifier_list ':' type

    ')'  shift, and go to state 98
    ';'  shift, and go to state 99


State 74

   17 subprogram_head: scoped_name function_arguments ':' . standard_type ';'

    INTEGER      shift, and go to state 44
    INTEGER_PTR  shift, and go to state 45
    REAL         shift, and go to state 46
    BOOLEAN      shift, and go to state 47

    standard_type  go to state 100


State 75

   18 subprogram_head: scoped_name procedure_arguments ';' .

    $default  reduce using rule 18 (subprogram_head)


State 76

    3 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement $@2 '.' .

    $default  reduce using rule 3 (program)


State 77

    9 type: ARRAY '[' . INUM DOTDOT INUM ']' OF standard_type

    INUM  shift, and go to state 101


State 78

    6 declarations: declarations VAR identifier_list ':' type ';' .

    $default  reduce using rule 6 (declarations)


State 79

   42 procedure_statement: ID '(' expression_list . ')'
   44 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 102
    ','  shift, and go to state 103


State 80

   43 expression_list: expression .

    $default  reduce using rule 43 (expression_list)


State 81

   40 variable: ID '[' expression . ']'

    ']'  shift, and go to state 104


State 82

   57 reference: ID '(' . expression_list ')'

    INUM     shift, and go to state 52
    BOOL     shift, and go to state 53
    RNUM     shift, and go to state 54
    ID       shift, and go to state 55
    NOTOP    shift, and go to state 56
    REFOP    shift, and go to state 57
    DEREFOP  shift, and go to state 58
    '('      shift, and go to state 59

    expression_list    go to state 105
    expression         go to state 80
    simple_expression  go to state 61
    term               go to state 62
    factor             go to state 63
    reference          go to state 64


State 83

   56 reference: ID '[' . expression ']'

    INUM     shift, and go to state 52
    BOOL     shift, and go to state 53
    RNUM     shift, and go to state 54
    ID       shift, and go to state 55
    NOTOP    shift, and go to state 56
    REFOP    shift, and go to state 57
    DEREFOP  shift, and go to state 58
    '('      shift, and go to state 59

    expression         go to state 106
    simple_expression  go to state 61
    term               go to state 62
    factor             go to state 63
    reference          go to state 64


State 84

   53 factor: NOTOP reference .

    $default  reduce using rule 53 (factor)


State 85

   52 factor: REFOP reference .

    $default  reduce using rule 52 (factor)


State 86

   51 factor: DEREFOP reference .

    $default  reduce using rule 51 (factor)


State 87

   61 reference: '(' expression . ')'

    ')'  shift, and go to state 107


State 88

   32 statement: IF expression THEN . statement
   33          | IF expression THEN . statement ELSE statement ';'

    ID      shift, and go to state 27
    BBEGIN  shift, and go to state 19
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    FOR     shift, and go to state 30

    compound_statement   go to state 31
    statement            go to state 108
    variable             go to state 35
    procedure_statement  go to state 36


State 89

   46 expression: simple_expression RELOP . simple_expression

    INUM     shift, and go to state 52
    BOOL     shift, and go to state 53
    RNUM     shift, and go to state 54
    ID       shift, and go to state 55
    NOTOP    shift, and go to state 56
    REFOP    shift, and go to state 57
    DEREFOP  shift, and go to state 58
    '('      shift, and go to state 59

    simple_expression  go to state 109
    term               go to state 62
    factor             go to state 63
    reference          go to state 64


State 90

   48 simple_expression: simple_expression ADDOP . term

    INUM     shift, and go to state 52
    BOOL     shift, and go to state 53
    RNUM     shift, and go to state 54
    ID       shift, and go to state 55
    NOTOP    shift, and go to state 56
    REFOP    shift, and go to state 57
    DEREFOP  shift, and go to state 58
    '('      shift, and go to state 59

    term       go to state 110
    factor     go to state 63
    reference  go to state 64


State 91

   50 term: term MULOP . factor

    INUM     shift, and go to state 52
    BOOL     shift, and go to state 53
    RNUM     shift, and go to state 54
    ID       shift, and go to state 55
    NOTOP    shift, and go to state 56
    REFOP    shift, and go to state 57
    DEREFOP  shift, and go to state 58
    '('      shift, and go to state 59

    factor     go to state 111
    reference  go to state 64


State 92

   37 statement: WHILE expression DO . statement_list

    ID      shift, and go to state 27
    BBEGIN  shift, and go to state 19
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    FOR     shift, and go to state 30

    compound_statement   go to state 31
    statement_list       go to state 112
    statement            go to state 34
    variable             go to state 35
    procedure_statement  go to state 36


State 93

   38 statement: FOR variable ASSIGNOP . expression TO expression DO statement_list

    INUM     shift, and go to state 52
    BOOL     shift, and go to state 53
    RNUM     shift, and go to state 54
    ID       shift, and go to state 55
    NOTOP    shift, and go to state 56
    REFOP    shift, and go to state 57
    DEREFOP  shift, and go to state 58
    '('      shift, and go to state 59

    expression         go to state 113
    simple_expression  go to state 61
    term               go to state 62
    factor             go to state 63
    reference          go to state 64


State 94

   31 statement_list: statement_list ';' statement .

    $default  reduce using rule 31 (statement_list)


State 95

   34 statement: variable ASSIGNOP expression .

    $default  reduce using rule 34 (statement)


State 96

   16 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement .

    $default  reduce using rule 16 (subprogram_declaration)


State 97

   24 parameter_list: identifier_list ':' . type

    ARRAY        shift, and go to state 43
    INTEGER      shift, and go to state 44
    INTEGER_PTR  shift, and go to state 45
    REAL         shift, and go to state 46
    BOOLEAN      shift, and go to state 47

    type           go to state 114
    standard_type  go to state 49


State 98

   21 function_arguments: '(' parameter_list ')' .
   22 procedure_arguments: '(' parameter_list ')' .

    ';'       reduce using rule 22 (procedure_arguments)
    $default  reduce using rule 21 (function_arguments)


State 99

   25 parameter_list: parameter_list ';' . identifier_list ':' type

    ID  shift, and go to state 7

    identifier_list  go to state 115


State 100

   17 subprogram_head: scoped_name function_arguments ':' standard_type . ';'

    ';'  shift, and go to state 116


State 101

    9 type: ARRAY '[' INUM . DOTDOT INUM ']' OF standard_type

    DOTDOT  shift, and go to state 117


State 102

   42 procedure_statement: ID '(' expression_list ')' .

    $default  reduce using rule 42 (procedure_statement)


State 103

   44 expression_list: expression_list ',' . expression

    INUM     shift, and go to state 52
    BOOL     shift, and go to state 53
    RNUM     shift, and go to state 54
    ID       shift, and go to state 55
    NOTOP    shift, and go to state 56
    REFOP    shift, and go to state 57
    DEREFOP  shift, and go to state 58
    '('      shift, and go to state 59

    expression         go to state 118
    simple_expression  go to state 61
    term               go to state 62
    factor             go to state 63
    reference          go to state 64


State 104

   40 variable: ID '[' expression ']' .

    $default  reduce using rule 40 (variable)


State 105

   44 expression_list: expression_list . ',' expression
   57 reference: ID '(' expression_list . ')'

    ')'  shift, and go to state 119
    ','  shift, and go to state 103


State 106

   56 reference: ID '[' expression . ']'

    ']'  shift, and go to state 120


State 107

   61 reference: '(' expression ')' .

    $default  reduce using rule 61 (reference)


State 108

   32 statement: IF expression THEN statement .
   33          | IF expression THEN statement . ELSE statement ';'

    ELSE  shift, and go to state 121

    ELSE      [reduce using rule 32 (statement)]
    $default  reduce using rule 32 (statement)


State 109

   46 expression: simple_expression RELOP simple_expression .
   48 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 90

    $default  reduce using rule 46 (expression)


State 110

   48 simple_expression: simple_expression ADDOP term .
   50 term: term . MULOP factor

    MULOP  shift, and go to state 91

    $default  reduce using rule 48 (simple_expression)


State 111

   50 term: term MULOP factor .

    $default  reduce using rule 50 (term)


State 112

   31 statement_list: statement_list . ';' statement
   37 statement: WHILE expression DO statement_list .

    ';'  shift, and go to state 69

    ';'       [reduce using rule 37 (statement)]
    $default  reduce using rule 37 (statement)


State 113

   38 statement: FOR variable ASSIGNOP expression . TO expression DO statement_list

    TO  shift, and go to state 122


State 114

   24 parameter_list: identifier_list ':' type .

    $default  reduce using rule 24 (parameter_list)


State 115

    5 identifier_list: identifier_list . ',' ID
   25 parameter_list: parameter_list ';' identifier_list . ':' type

    ','  shift, and go to state 10
    ':'  shift, and go to state 123


State 116

   17 subprogram_head: scoped_name function_arguments ':' standard_type ';' .

    $default  reduce using rule 17 (subprogram_head)


State 117

    9 type: ARRAY '[' INUM DOTDOT . INUM ']' OF standard_type

    INUM  shift, and go to state 124


State 118

   44 expression_list: expression_list ',' expression .

    $default  reduce using rule 44 (expression_list)


State 119

   57 reference: ID '(' expression_list ')' .

    $default  reduce using rule 57 (reference)


State 120

   56 reference: ID '[' expression ']' .

    $default  reduce using rule 56 (reference)


State 121

   33 statement: IF expression THEN statement ELSE . statement ';'

    ID      shift, and go to state 27
    BBEGIN  shift, and go to state 19
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    FOR     shift, and go to state 30

    compound_statement   go to state 31
    statement            go to state 125
    variable             go to state 35
    procedure_statement  go to state 36


State 122

   38 statement: FOR variable ASSIGNOP expression TO . expression DO statement_list

    INUM     shift, and go to state 52
    BOOL     shift, and go to state 53
    RNUM     shift, and go to state 54
    ID       shift, and go to state 55
    NOTOP    shift, and go to state 56
    REFOP    shift, and go to state 57
    DEREFOP  shift, and go to state 58
    '('      shift, and go to state 59

    expression         go to state 126
    simple_expression  go to state 61
    term               go to state 62
    factor             go to state 63
    reference          go to state 64


State 123

   25 parameter_list: parameter_list ';' identifier_list ':' . type

    ARRAY        shift, and go to state 43
    INTEGER      shift, and go to state 44
    INTEGER_PTR  shift, and go to state 45
    REAL         shift, and go to state 46
    BOOLEAN      shift, and go to state 47

    type           go to state 127
    standard_type  go to state 49


State 124

    9 type: ARRAY '[' INUM DOTDOT INUM . ']' OF standard_type

    ']'  shift, and go to state 128


State 125

   33 statement: IF expression THEN statement ELSE statement . ';'

    ';'  shift, and go to state 129


State 126

   38 statement: FOR variable ASSIGNOP expression TO expression . DO statement_list

    DO  shift, and go to state 130


State 127

   25 parameter_list: parameter_list ';' identifier_list ':' type .

    $default  reduce using rule 25 (parameter_list)


State 128

    9 type: ARRAY '[' INUM DOTDOT INUM ']' . OF standard_type

    OF  shift, and go to state 131


State 129

   33 statement: IF expression THEN statement ELSE statement ';' .

    $default  reduce using rule 33 (statement)


State 130

   38 statement: FOR variable ASSIGNOP expression TO expression DO . statement_list

    ID      shift, and go to state 27
    BBEGIN  shift, and go to state 19
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    FOR     shift, and go to state 30

    compound_statement   go to state 31
    statement_list       go to state 132
    statement            go to state 34
    variable             go to state 35
    procedure_statement  go to state 36


State 131

    9 type: ARRAY '[' INUM DOTDOT INUM ']' OF . standard_type

    INTEGER      shift, and go to state 44
    INTEGER_PTR  shift, and go to state 45
    REAL         shift, and go to state 46
    BOOLEAN      shift, and go to state 47

    standard_type  go to state 133


State 132

   31 statement_list: statement_list . ';' statement
   38 statement: FOR variable ASSIGNOP expression TO expression DO statement_list .

    ';'  shift, and go to state 69

    ';'       [reduce using rule 38 (statement)]
    $default  reduce using rule 38 (statement)


State 133

    9 type: ARRAY '[' INUM DOTDOT INUM ']' OF standard_type .

    $default  reduce using rule 9 (type)
